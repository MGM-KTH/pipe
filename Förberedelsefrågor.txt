Förberedelsefrågor


1. När en maskin bootar med UNIX skapas en process som har PID=1 och den lever så länge maskinen är uppe. Från den här processen skapas alla andra processer med fork. Vad heter denna process?
Tips: Kommandot ps -el (SysV) eller ps -aux (BSD) ger en lista med mycket information om alla processer i systemet.

- init on Linux, launchd on Mac


2. Kan environmentvariabler användas för att kommunicera mellan föräldra- och barnprocess? åt bägge hållen?

- Ja. Båda kan läsa och skriva till dessa. (Det är dock inte ett vanligt sätt att kommunicera på???? Låter jävligt skumt)



3. Man kan tänka sig att skapa en odödlig child-process som fångar alla SIGKILL-signaler genom att registrera en egen signalhanterare kill_handler som bara struntar i SIGKILL. Processen ska förstås ligga i en oändlig loop då den inte exekverar signalhanteraren. Testa! Skriv ett program med en sådan signalhanterare, kompilera och provkör. Vad händer? Läs mer i manualtexten om sigaction för att förklara resultatet.

- sigaction() failed: Invalid argument
From the man file for sigaction:
ERRORS
     The sigaction() system call will fail and no new signal handler will be
     installed if one of the following occurs:
    
     [EINVAL]           An attempt is made to ignore or supply a handler for
                        SIGKILL or SIGSTOP.


4. Varför returnerar fork 0 till child-processen och child-PID till parent-processen, i stället för tvärtom?

Parent-Children är en one-to-many-relation. En child-process kan anropa getppid() för att få parent-processens PID,
men det enda sättet för en parent-process att hålla reda på sina child-processer är via returvärdet från fork.


5. UNIX håller flera nivåer av tabeller för öppna filer, både en användarspecifik “File Descriptor Table” och en global “File Table”. Behövs egentligen File Table? Kan man ha offset i File Descriptor Table istället?

- Nej, "File Table" behövs. Bla bla bla



6. Kan man strunta i att stänga en pipe om man inte använder den? Hur skulle programbeteendet påverkas? Testa själv. 
Läs mer i pipe(2).

- ????



7. Vad händer om en av processerna plötsligt dör? Kan den andra processen upptäcka detta?

- ????



8. Hur kan du i ditt program ta reda på om grep misslyckades? Dvs om grep inte hittade någon förekomst av det den skulle söka efter eller om du gett felaktiga parametrar till grep?

Grep will return:
    0     One or more lines were selected.
    1     No lines were selected.
    >1    An error occurred.


